<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vintasoft.Shared</name>
    </assembly>
    <members>
        <member name="T:Vintasoft.Data.CloneableObjectStorageInMemory">
            <summary>
            A data storage that allows to store objects, which implement the <see cref="T:System.ICloneable" /> interface,
            in memory.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Data.CloneableObjectStorageInMemory" /> class.
            </summary>
        </member>
        <member name="P:Vintasoft.Data.CloneableObjectStorageInMemory.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <b>true</b> if this instance is disposed; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Data.CloneableObjectStorageInMemory.Items">
            <summary>
            Gets a dictionary, which maps item keys into items.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.GetKeys">
            <summary>
            Returns the keys of all items from data storage.
            </summary>
            <returns>The keys of all items from data storage.</returns>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.AddItem(System.String,System.Object)">
            <summary>
            Adds new item to the data storage.
            </summary>
            <param name="key">The item identifier.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>key</i> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <i>key</i> exists already.</exception>
            <exception cref="T:System.ArgumentException">Thrown if storage can't store specified item.</exception>       
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.SetItem(System.String,System.Object)">
            <summary>
            Sets the existing item in the data storage.
            </summary>
            <param name="key">The item identifier.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if storage can't store specified item.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.GetItemCopy(System.String)">
            <summary>
            Returns an item copy from the data storage.
            </summary>
            <param name="key">The item identifier.</param>
            <returns>
            The copy (clone) of item data.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>key</i> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <i>key</i> is not found.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.DeleteItem(System.String)">
            <summary>
            Deletes the item from the data storage.
            </summary>
            <param name="key">The item identifier.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>key</i> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if
            item with specified <paramref name="key" /> is locked.</exception>
            <remarks>
            This method invokes the <see cref="M:System.IDisposable.Dispose" /> of the removed object
            if removed object implements the <see cref="T:System.IDisposable" /> interface.
            </remarks>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.Contains(System.String)">
            <summary>
            Determines whether the data storage contains an item with the specified identifier.
            </summary>
            <param name="key">The item identifier.</param>
            <returns>
            <b>True</b> - the data storage contains an item with the specified identifier;
            <b>false</b> - the data storage does NOT contain an item with the specified identifier.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>key</i> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.LockItem(System.String)">
            <summary>
            Locks an item in data storage and returns the item.
            </summary>
            <param name="key">The item key.</param>
            <returns>The locked item from data storage.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if item with specified <paramref name="key" /> does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if
            item with specified <paramref name="key" /> is already locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.UnlockItem(System.String,System.Object)">
            <summary>
            Unlocks the locked item in data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">Locked item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ArgumentException">Thrown if storage can't store specified item.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if item with specified <paramref name="key" /> does not exist.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if
            item with specified <paramref name="key" /> is not locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Vintasoft.Data.CloneableObjectStorageInMemory" />.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.CanStore(System.Type)">
            <summary>
            Determines whether the data of specified type can be stored in the data storage.
            </summary>
            <param name="type">The type of data.</param>
        </member>
        <member name="M:Vintasoft.Data.CloneableObjectStorageInMemory.CheckDataType(System.Object)">
            <summary>
            Checks the type of the item.
            </summary>
            <param name="item">The data.</param>
            <exception cref="T:System.ArgumentException">Thrown if storage can't store specified item.</exception>
        </member>
        <member name="T:Vintasoft.Data.CompositeDataStorage">
            <summary>
            A data storage that allows to work with several data storages.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.#ctor(Vintasoft.Data.IDataStorage[])">
            <summary>
            Initializes a new instance of <see cref="T:Vintasoft.Data.CompositeDataStorage" /> class.
            </summary>
            <param name="dataStorages">A collection of  data storages.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="dataStorages" /> is <b>null</b>.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.#ctor(System.Collections.Generic.IList{Vintasoft.Data.IDataStorage})">
            <summary>
            Initializes a new instance of <see cref="T:Vintasoft.Data.CompositeDataStorage" /> class.
            </summary>
            <param name="dataStorages">A collection of  data storages.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="dataStorages" /> is <b>null</b>.</exception>
        </member>
        <member name="P:Vintasoft.Data.CompositeDataStorage.Storages">
            <summary>
            Gets the list of data storages.
            </summary>
        </member>
        <member name="P:Vintasoft.Data.CompositeDataStorage.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <b>true</b> if this instance is disposed; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.AddItem(System.String,System.Object)">
            <summary>
            Adds new item to the data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if an element with the same key already exists in the data storage.</exception>
            <exception cref="T:System.ArgumentException">Thrown if data storage cannot store <paramref name="item" /> object.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.CanStore(System.Type)">
            <summary>
            Determines whether the data storage can store data of specified type.
            </summary>
            <param name="type">The type of data.</param>
            <returns>
            <b>true</b> if data storage can store data of this type.
            <b>false</b> if data storage cannot store data of this type.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="type" /> is <b>null</b>.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.Contains(System.String)">
            <summary>
            Determines whether the data storage contains an item with the specified identifier.
            </summary>
            <param name="key">The item key.</param>
            <returns>
            <b>true</b> if data storage contains this item.
            <b>false</b> if data storage not contains this item.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Vintasoft.Data.CompositeDataStorage" />.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.DeleteItem(System.String)">
            <summary>
            Deletes the item from the data storage.
            </summary>
            <param name="key">The item key.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.GetItemCopy(System.String)">
            <summary>
            Returns an item copy from the data storage.
            </summary>
            <param name="key">The item key.</param>
            <returns>The copy (clone) of item data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is locked.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="key" /> is not found.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.SetItem(System.String,System.Object)">
            <summary>
            Sets the existing item in the data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.LockItem(System.String)">
            <summary> 
            Locks an item in data storage and returns the item.
            </summary>
            <param name="key">The item key.</param>
            <returns>The locked item from data storage.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b> or empty.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is already locked.</exception>
            <exception cref="T:System.ArgumentException">Thrown if item with specified <paramref name="key" /> does not exist.</exception>        
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.UnlockItem(System.String,System.Object)">
            <summary>
            Unlock the locked item in data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">Locked item.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.ObjectDisposedException">Thrown if this instance is disposed.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is not locked.</exception>
            <exception cref="T:System.ArgumentException">Thrown if item with specified <paramref name="key" /> does not exist.</exception>
        </member>
        <member name="M:Vintasoft.Data.CompositeDataStorage.GetKeys">
            <summary>
            Returns the keys of all items from data storage.
            </summary>
            <returns>The keys of all items from data storage.</returns>
        </member>
        <member name="T:Vintasoft.Data.IDataStorage">
            <summary>
            Provides a mechanism for storing data in data storage.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.AddItem(System.String,System.Object)">
            <summary>
            Adds new item to the data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the data storage.</exception>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.SetItem(System.String,System.Object)">
            <summary>
            Sets the existing item in the data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">The item data.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.InvalidOperationException">If item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.GetItemCopy(System.String)">
            <summary>
            Returns an item copy from the data storage.
            </summary>
            <param name="key">The item key.</param>
            <returns>The copy (clone) of item data.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="key" /> is not found.</exception>
            <exception cref="T:System.InvalidOperationException">If item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.LockItem(System.String)">
            <summary>
            Locks an item in data storage and returns the item.
            </summary>
            <param name="key">The item key.</param>
            <returns>The locked item from data storage.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is already locked.</exception>
            <seealso cref="M:Vintasoft.Data.IDataStorage.UnlockItem(System.String,System.Object)" />
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.UnlockItem(System.String,System.Object)">
            <summary>
            Unlock the locked item in data storage.
            </summary>
            <param name="key">The item key.</param>
            <param name="item">Locked item.<br />
            The item will be overrwritten if item differs from the item returned by the <see cref="M:Vintasoft.Data.IDataStorage.LockItem(System.String)" /> method.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if item with specified <paramref name="key" /> is not locked.</exception>
            <seealso cref="M:Vintasoft.Data.IDataStorage.LockItem(System.String)" />
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.DeleteItem(System.String)">
            <summary>
            Deletes the item from the data storage.
            </summary>
            <param name="key">The item key.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <b>null</b>.</exception>
            <exception cref="T:System.InvalidOperationException">If item with specified <paramref name="key" /> is locked.</exception>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.GetKeys">
            <summary>
            Returns the keys of all items from data storage.
            </summary>
            <returns>The keys of all items from data storage.</returns>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.Contains(System.String)">
            <summary>
            Determines whether the data storage contains an item with the specified identifier.
            </summary>
            <param name="key">The item key.</param>
            <returns>
            <b>True</b> - the data storage contains an item with the specified identifier;
            <b>false</b> - the data storage does NOT contain an item with the specified identifier.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="key" /> is <b>null</b>.</exception>
        </member>
        <member name="M:Vintasoft.Data.IDataStorage.CanStore(System.Type)">
            <summary>
            Determines whether the data storage can store data of specified type.
            </summary>
            <param name="type">The type of data.</param>
            <returns>
            <b>True</b> if data storage can store data of specified type;
            otherwise, <b>false</b>.
            </returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="type" /> is <b>null</b>.</exception>
        </member>
        <member name="T:Vintasoft.Data.StreamDataStorageOnDisk">
            <summary>
            A data storage that stores streams in files on disk.
            </summary>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Data.StreamDataStorageOnDisk" /> class.
            </summary>
            <param name="storagePath">An absolute path to the directory,
            where storage must store files.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>storagePath</i> is <b>null</b> or empty.
            </exception>
            <exception cref="T:System.FormatException">Thrown if 
            <i>storagePath</i> contains invalid characters.
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown if
            <i>storagePath</i> does not exist.
            </exception>
        </member>
        <member name="P:Vintasoft.Data.StreamDataStorageOnDisk.OpenFileTimeout">
            <summary>
            Gets or sets a timeout, in milliseconds, for opening the file stream.
            </summary>
            <value>
            Default value is 100. Minimum value is 100, maximum value is 360000.
            </value>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.AddItem(System.String,System.Object)">
            <summary>
            Adds a stream to the data storage.
            </summary>
            <param name="key">The stream filename.</param>
            <param name="item">The stream data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
            <remarks>
            Method creates new file in data storage, writes data into the file and
            closes the file.
            </remarks>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.SetItem(System.String,System.Object)">
            <summary>
            Sets a stream in data storage.
            </summary>
            <param name="key">The stream filename.</param>
            <param name="item">The stream data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
            <remarks>
            Method opens a file in read-write mode, writes new data into the file and
            closes the file.
            </remarks>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.GetItemCopy(System.String)">
            <summary>
            Returns a stream from data storage.
            </summary>
            <param name="key">The stream filename.</param>
            <returns>
            The stream, which was opened in read-only mode with ability to share a file.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.LockItem(System.String)">
            <summary>
            Locks the stream in data storage and
            returns the locked stream.
            </summary>
            <param name="key">The stream filename.</param>
            <returns>The stream, which was opened in read-write mode and
            without ability to share the file.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
            <remarks>
            Method creates a file if file does not exist.
            </remarks>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.UnlockItem(System.String,System.Object)">
            <summary>
            Unlocks the locked stream in data storage.
            </summary>
            <param name="key">The stream filename.</param>
            <param name="item">The stream data.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if
            <b>item</b> was not previously locked.</exception>
            <remarks>
            Method closes the file, which was previously opened in read-write mode
            and without ability to share the file.
            </remarks>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.DeleteItem(System.String)">
            <summary>
            Deletes the strean from data storage.
            </summary>
            <param name="key">The stream filename.</param>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.GetKeys">
            <summary>
            Returns the filenames of all streams from data storage.
            </summary>
            <returns>The filenames of all streams from data storage.</returns>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.Contains(System.String)">
            <summary>
            Determines whether the data storage contains an item with the specified key.
            </summary>
            <param name="key">The key of the item.</param>
            <returns>
            <b>True</b> - the data storage contains an item with the specified key;
            <b>false</b> - the data storage does NOT contain an item with the specified key.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>key</i> is <b>null</b> or empty.</exception>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.CanStore(System.Type)">
            <summary>
            Determines whether the data of specified type can be stored in the data storage.
            </summary>
            <param name="type">The type of data.</param>
            <returns>
            <b>True</b> - data storage can store the specified type;
            <b>false</b> - data storage cannot store the specified type.
            </returns>
        </member>
        <member name="M:Vintasoft.Data.StreamDataStorageOnDisk.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Vintasoft.Data.StreamDataStorageOnDisk" />.
            </summary>
        </member>
        <member name="T:Vintasoft.Data.FileManager">
            <summary>
            Static manager that allows to open/close files.
            </summary>
        </member>
        <member name="P:Vintasoft.Data.FileManager.OpenFileTimeout">
            <summary>
            Gets or sets the timeout, in milliseconds, for <see cref="M:Vintasoft.Data.FileManager.OpenFile(System.String,System.IO.FileAccess)" /> method.
            </summary>
            <value>
            Default value is 100. Minimum value is 100, maximum value is 360000.
            </value>
        </member>
        <member name="M:Vintasoft.Data.FileManager.OpenFile(System.String,System.IO.FileAccess)">
            <summary>
            Opens an existing file with the specified access mode.
            </summary>
            <param name="filePath">An absolute path to a file.</param>
            <param name="fileAccess">A constant that defines how the file can be accessed.</param>
            <returns>
            File stream.
            </returns>
            <remarks>
            The method will create new file if <i>fileAccess</i> is set to <see cref="T:System.IO.FileAccess" />.Write;
            otherwise, the method will open a file.
            </remarks>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if
            file must be opened but file is not found.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if
            file must be created but file exists already.
            </exception>
            <exception cref="T:System.TimeoutException">Thrown if
            file is locked.
            </exception>
        </member>
        <member name="M:Vintasoft.Data.FileManager.CloseFile(System.String,System.IO.FileAccess,System.IO.FileStream)">
            <summary>
            Unlocks file after the file is closed.
            </summary>
            <param name="filename">An absolute path to a file.</param>
            <param name="access">A constant that defines how the file can be accessed.</param>
            <param name="stream">Stream to close.</param>
            <exception cref="T:System.IO.FileLoadException">Thrown if
            file is not unlocked.</exception>
        </member>
        <member name="T:Vintasoft.Imaging.ColorChannelsOrder">
            <summary>
            Defines an order of color channels rearrangement.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> class.
            </summary>
            <param name="channelsOrder">A sequence of channel ordinal numbers.</param>
            <remarks>
            The <i>channelsOrder</i> array defines a remapping of default channels sequence.<br />
            For example, if color space is RGB and channels order is [2,0,1] then
            defined color format is BRG.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.#ctor(Vintasoft.Imaging.ColorSpaceType)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> class.
            </summary>
            <param name="colorSpace">Color space which is used to determine
            the number and the order of color channels.</param>
            <remarks>Channels order will be set to default for specified color space type.<br />
            For example, if color space is RGB, values will be [0,1,2].</remarks>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> class.
            </summary>
            <param name="numberOfChannels">A number of channels.</param>
            <remarks>Channels order will be set to default.<br />
            For example, if number of channels is 3, values will be [0,1,2].</remarks>
        </member>
        <member name="P:Vintasoft.Imaging.ColorChannelsOrder.ChannelsOrder0">
            <summary>
            Gets the single channel order.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorChannelsOrder.ChannelsOrder012">
            <summary>
            Gets the channel order with indexes 0 1 2.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorChannelsOrder.ChannelsOrder210">
            <summary>
            Gets the channel with indexes 2 1 0.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorChannelsOrder.ChannelsOrder0123">
            <summary>
            Gets the channel with indexes 0 1 2 3.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />
            is equal to the current <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />.
            </summary>
            <param name="obj">
            The <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> to compare with
            the current <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />.
            </param>
            <returns>
            <b>true</b> if the specified <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> is
            equal to the current <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.GetHashCode">
            <summary>
            Gets the hash code for this <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />.
            </summary>
            <returns>The hash code for this <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.ToArray">
            <summary>
            Copies the elements of this <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> to a new array.
            </summary>
            <returns>
            An array containing copies of the elements of this <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" />.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorChannelsOrder.Create(Vintasoft.Imaging.PixelFormat)">
            <summary>
            Creates a new instance of <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> class
            that corresponds to the specified <see cref="T:Vintasoft.Imaging.PixelFormat" />.
            </summary>
            <param name="imagePixelFormat">Pixel format.</param>
            <returns>A new instance of <see cref="T:Vintasoft.Imaging.ColorChannelsOrder" /> class.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.ColorSpaceFormat">
            <summary>
            Specifies a color space and order of color channels.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> class.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.#ctor(Vintasoft.Imaging.ColorChannelsOrder)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> class.
            </summary>
            <param name="channelsOrder">The channels order.</param>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.#ctor(Vintasoft.Imaging.ColorSpaceType,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> class.
            </summary>
            <param name="colorSpace">Color space.</param>
            <param name="channelsOrder">A sequence of channel ordinal numbers.</param>
            <remarks>
            The <i>channelsOrder</i> array defines a remapping of default channels sequence.<br />
            For example, if color space is RGB and channels order is [2,0,1] then
            defined color format is BRG.<br />
            <br />
            Values of the <i>channelsOrder</i> can contain undefined channels.<br />
            For example, BGRA color format can be specified using RGB color space
            and [2,1,0,3] values of channels order.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.#ctor(Vintasoft.Imaging.ColorSpaceType,Vintasoft.Imaging.ColorChannelsOrder)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> class.
            </summary>
            <param name="colorSpace">Color space.</param>
            <param name="channelsOrder">A color channels order.</param>
            <remarks>
            The <i>channelsOrder</i> defines a remapping of default channels sequence.<br />
            For example, if color space is RGB and channels order is [2,0,1] then
            defined color format is BRG.<br />
            <br />
            Values of the <i>channelsOrder</i> can contain undefined channels.<br />
            For example, BGRA color format can be specified using RGB color space
            and [2,1,0,3] values of channels order.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormat.ColorSpace">
            <summary>
            Gets the color space of this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormat.ColorChannelsOrder">
            <summary>
            Gets the color channels order of this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </summary>
            <remarks>
            Value of this property defines a remapping of default channels sequence.<br />
            For example, if color space is RGB and channels order is [2,0,1] then
            defined color format is BRG.<br />
            <br />
            Values of the <i>channelsOrder</i> can contain undefined channels.<br />
            For example, BGRA color format can be specified using RGB color space
            and [2,1,0,3] values of channels order.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormat.ColorChannelCount">
            <summary>
            Gets the channels count of this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </summary>
            <remarks>
            Value of this property determines the number of channels within
            this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.<br />
            For example, if channels order is [2,0,1] then color channels count is 3.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />
            is equal to the current <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </summary>
            <param name="obj">
            The <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> to compare with
            the current <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </param>
            <returns>
            <b>true</b> if the specified <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" /> is
            equal to the current <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.ColorSpaceFormat.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.
            </summary>
            <returns>The hash code for this <see cref="T:Vintasoft.Imaging.ColorSpaceFormat" />.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.ColorSpaceFormats">
            <summary>
            Represents a collection of most commonly used color space formats.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.Gray">
            <summary>
            Gets gray format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.Rgb">
            <summary>
            Gets RGB format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.Bgr">
            <summary>
            Gets BGR format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.Bgra">
            <summary>
            Gets BGRA format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.Cmyk">
            <summary>
            Gets CMYK format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.PcsXyz">
            <summary>
            Gets PCSXYZ format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.CieLab">
            <summary>
            Gets CIE Lab format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.CieXyz">
            <summary>
            Gets CIE XYZ format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.ColorSpaceFormats.PcsLab">
            <summary>
            Gets PCSLAB format.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.ColorSpaceType">
            <summary>
            Specifies available color space types.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.Unsupported">
            <summary>
            Color space is unsupported.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.Gray">
            <summary>
            Color space type is gray.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.sRGB">
            <summary>
            Color space type is sRGB.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CMYK">
            <summary>
            Color space type is CMYK.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CMY">
            <summary>
            Color space type is CMY.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CIELab">
            <summary>
            Color space type is CIELab.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CIEXYZ">
            <summary>
            Color space type is CIEXYZ.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CIEYxy">
            <summary>
            Color space type is CIEYxy.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.CIELUV">
            <summary>
            Color space type is CIELUV.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.PCSLab">
            <summary>
            Color space type is PCSLab.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.PCSXYZ">
            <summary>
            Color space type is PCSXYZ.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.YCbCrK">
            <summary>
            Color space type is YCbCrK.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.YCbCr">
            <summary>
            Color space type is YCbCr.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.HSV">
            <summary>
            Color space type is HSV.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.ColorSpaceType.HLS">
            <summary>
            Color space type is HLS.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Palette">
            <summary>
            Defines a palette of the image.
            </summary>
            <remarks>
            The colors are stored as 32-bit (ARGB) values.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Palette" /> class.
            </summary>
            <remarks>
            This constructor creates an empty palette.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.#ctor(Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Palette" /> class.
            </summary>
            <param name="palette"><see cref="T:Vintasoft.Imaging.Palette" /> object which contains
            color values.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Palette" /> class.
            </summary>
            <param name="colors">Color values.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Palette" /> class.
            </summary>
            <param name="colorCount">The count of colors.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.#ctor(Vintasoft.Imaging.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Palette" /> class.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.ColorCount">
            <summary>
            Gets the number of colors in this palette.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.UniqueColorCount">
            <summary>
            Gets the number of unique colors in this palette.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.IsBlackWhite">
            <summary>
            Gets a value indicating whether this palette is standard black-white palette.
            </summary>
            <returns>
            <b>true</b> if palette is standard black-white palette;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.IsBlackWhiteInverted">
            <summary>
            Gets a value indicating whether this palette is inverted black-white palette.
            </summary>
            <returns>
            <b>true</b> if palette is inverted black-white palette;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.IsGray">
            <summary>
            Gets a value indicating whether this palette is grayscale palette with 256 colors.
            </summary>
            <returns>
            <b>true</b> if palette is grayscale palette with 256 colors;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="P:Vintasoft.Imaging.Palette.HasTransparentColor">
            <summary>
            Gets a value that indicating whether this palette has transparent color.
            </summary>
            <value>
            <b>True</b> if this palette has transparent color; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.CreateBlackWhitePalette">
            <summary>
            Creates a standard black-white palette, i.e. black is zero.
            </summary>
            <returns>Standard black-white palette.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.CreateInvertedBlackWhitePalette">
            <summary>
            Creates an inverted black-white palette, i.e. white is zero.
            </summary>
            <returns>Inverted black-white palette.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.CreateGrayscalePalette">
            <summary>
            Creates grayscale palette with 256 colors.
            </summary>
            <returns>Grayscale palette with 256 colors.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.CreateGrayscalePalette(System.Int32)">
            <summary>
            Creates grayscale palette with specified color count.
            </summary>
            <param name="colorsCount">Palette color count. Possible values: 2, 4, 16, 256.</param>
            <returns>Grayscale palette.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.CreateInvertedGrayscalePalette(System.Int32)">
            <summary>
            Creates an inverted grayscale palette with specified color count.
            </summary>
            <param name="colorsCount">Palette color count. Possible values: 2, 4, 16, 256.</param>
            <returns>Inverted grayscale palette.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.Union(Vintasoft.Imaging.Palette,Vintasoft.Imaging.Palette)">
            <summary>
            Returns an array of colors that represents the union of two palettes.
            </summary>
            <param name="palette1">First palette.</param>
            <param name="palette2">Second palette.</param>
            <returns>Array of colors that represents the union of two palettes.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetAsArray">
            <summary>
            Returns colors of the palette as array of ARGB values.
            </summary>
            <returns>Colors of the palette as array of ARGB values.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetAsArray(System.Int32)">
            <summary>
            Returns colors of the palette as array of ARGB values.
            </summary>
            <param name="colorCount">Th color count.</param>
            <returns>Colors of the palette as array of ARGB values.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.Invert">
            <summary>
            Inverts the palette.
            </summary>
            <remarks>
            This method generates the <see cref="E:Vintasoft.Imaging.Palette.Changed" /> event when palette
            is inverted.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.ConvertToGrayColors">
            <summary>
            Converts the palette colors to gray colors.
            </summary>
            <remarks>
            This method generates the <see cref="E:Vintasoft.Imaging.Palette.Changed" /> event when palette
            is converted.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.ConvertToBlackWhiteColors">
            <summary>
            Converts a bitonal palette to a black-white or white-black palette.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if
            palette color count is not equal 2.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetColor(System.Int32)">
            <summary>
            Returns the color of specified item of palette.
            </summary>
            <param name="index">Index of the palette item.</param>
            <returns>Color of specified item of palette.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetColor(System.Int32,System.Int32)">
            <summary>
            Sets the color of specified item of palette.
            </summary>
            <param name="index">Index of the palette item.</param>
            <param name="value">Color value.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetColors(System.Int32[])">
            <summary>
            Sets the colors of palette.
            </summary>
            <param name="colors">Color values in ARGB format.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.Equals(System.Object)">
            <summary>
            Returns a value indicating whether two <see cref="T:Vintasoft.Imaging.Palette" /> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:Vintasoft.Imaging.Palette" /> to compare with
            the current <see cref="T:Vintasoft.Imaging.Palette" />.</param>
            <returns><b>true</b> if the specified <see cref="T:Vintasoft.Imaging.Palette" /> is
            equal to the current <see cref="T:Vintasoft.Imaging.Palette" />;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Imaging.Palette" />.
            </summary>
            <returns>A hash code for the current <see cref="T:Vintasoft.Imaging.Palette" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.Clone">
            <summary>
            Creates a new Palette that is a copy of the current instance.
            </summary>
            <returns>A new Palette that is a copy of this instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.FindColorIndex(System.Int32)">
            <summary>
            Finds the index of specified color in this <see cref="T:Vintasoft.Imaging.Palette" />.
            </summary>
            <param name="color" />
            <returns>
            Color index in this palette if palette contains the color;
            -1, otherwise.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetGrayscalePalette(System.Int32)">
            <summary>
            Converts this palette to a grayscale palette with specified color count.
            </summary>
            <param name="colorCount">Color count in the result palette.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetGrayPalleteColors(System.Int32)">
            <summary>
            Returns an array that contains colors for grayscale pallete.
            </summary>
            <param name="bitsPerComponent">The bits per component.</param>
            <returns>The array that contains colors for grayscale pallete.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetNearestColorIndex(System.Int32)">
            <summary>
            Returns index of palette color, which is nearest to the specified color.
            </summary>
            <param name="color">An integer value that represents RGB color.</param>
            <returns>An index of palette color.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetActualPixelFormat(Vintasoft.Imaging.PixelFormat)">
            <summary>
            Returns actual pixel format if pixel format does not correspond to this palette.
            </summary>
            <param name="pixelFormat">Source pixel format.</param>
            <returns>
            New pixel format if pixel format does not correspond to this palette;
            otherwise, source pixel format.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.GetFirstTransparentColorIndex">
            <summary>
            Returns index of the first transparent color in palette.
            </summary>
            <returns>
            An index of the first transparent color in palette.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.ChangeColorsToBlackWhite">
            <summary>
            Changes the palette colors to the black and white colors.
            </summary>
            <remarks>
            Method sets the first color to the black color, the second color to the white color.<br />
            If palette contains more than 2 colors, the third and next colors are set to 0.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetNewColorsCore(System.Int32[])">
            <summary>
            Sets new colors in palette without raising of <see cref="E:Vintasoft.Imaging.Palette.Changed" /> event.
            </summary>
            <param name="colors">New colors.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetBlackWhitePalette">
            <summary>
            Converts this palette to the black-white palette.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Palette.SetInvertedBlackWhitePalette">
            <summary>
            Converts this palette to the inverted black-white palette.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Palette.Changed">
            <summary>
            Occurs when this palette is changed.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.PixelFormat">
            <summary>
            Specifies the format of the color data for each pixel in the image.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Undefined">
            <summary>
            Undefined pixel format.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Indexed1">
            <summary>
            Specifies that the pixel format is 1 bit per pixel and that it uses
            indexed color. The color table therefore has two colors in it.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.BlackWhite">
            <summary>
            Specifies that the pixel format is 1 bit per pixel and that it uses
            two colors: black and white.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Indexed4">
            <summary>
            Specifies that the format is 4 bits per pixel, indexed.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Indexed8">
            <summary>
            Specifies that the format is 8 bits per pixel, indexed. The color
            table therefore has 256 colors in it.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Gray8">
            <summary>
            The pixel format is 8 bits per pixel. The color information specifies
            256 shades of gray.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgr555">
            <summary>
            Specifies that the format is 15 bits per pixel; 5 bits each are used for
            the blue, green, and red components. 
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgr565">
            <summary>
            Specifies that the format is 16 bits per pixel; 5-6-5 bits each are used for
            the blue, green, and red components. 
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Gray16">
            <summary>
            The pixel format is 16 bits per pixel. The color information specifies
            65536 shades of gray.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgr24">
            <summary>
            Specifies that the format is 24 bits per pixel; 8 bits each are used for
            the blue, green, and red components. 
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgr32">
            <summary>
            Specifies that the format is 32 bits per pixel; 8 bits each are used
            for the blue, green and red components. The remaining 8 bits are not used. 
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgra32">
            <summary>
            Specifies that the format is 32 bits per pixel; 8 bits each are used
            for the blue, green, red and alpha components.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgr48">
            <summary>
            Specifies that the format is 48 bits per pixel; 16 bits each are used for
            the blue, green, and red components. 
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.PixelFormat.Bgra64">
            <summary>
            Specifies that the format is 64 bits per pixel; 16 bits each are used
            for the blue, green, red and alpha components.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Resolution">
            <summary>
            Stores an ordered pair of float values, typically the horizontal and
            vertical resolution.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.Resolution.Empty">
            <summary>
            Empty resolution.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Resolution.Horizontal">
            <summary>
            Gets the horizontal resolution, in pixels per inch.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Resolution.Vertical">
            <summary>
            Gets the vertical resolution, in pixels per inch.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Resolution" /> structure.
            </summary>
            <param name="horizontal">Horizontal resolution, in pixels per inch.</param>
            <param name="vertical">Vertical resolution, in pixels per inch.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if <b>horizontal</b> or <b>vertical</b> resolution is less than 0.
            </exception>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Resolution" /> structure.
            </summary>
            <param name="resolution">Horizontal and vertical resolution, in pixels per inch.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if <paramref name="resolution" /> is less than 0.
            </exception>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Resolution" /> structure.
            </summary>
            <param name="horizontal">Horizontal resolution, in pixels per inch.</param>
            <param name="vertical">Vertical resolution, in pixels per inch.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if <paramref name="horizontal" /> or <paramref name="vertical" /> resolution is less than 0.
            </exception>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Resolution" /> class.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.IsEmpty">
            <summary>
            Determines that resolution is empty.
            </summary>
            <returns><b>true</b> if the resolution is empty;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal
            to a specified object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns><b>true</b> if obj is an instance of <see cref="T:Vintasoft.Imaging.Resolution" />
            and equals the value of this instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.op_Equality(Vintasoft.Imaging.Resolution,Vintasoft.Imaging.Resolution)">
            <summary>
            Compares two <see cref="T:Vintasoft.Imaging.Resolution" /> structures. The result specifies whether 
            the values of the <see cref="P:Vintasoft.Imaging.Resolution.Horizontal" /> and <see cref="P:Vintasoft.Imaging.Resolution.Vertical" />
            properties of the two <see cref="T:Vintasoft.Imaging.Resolution" /> structures are equal.
            </summary>
            <param name="left">A <see cref="T:Vintasoft.Imaging.Resolution" /> to compare.</param>
            <param name="right">A <see cref="T:Vintasoft.Imaging.Resolution" /> to compare.</param>
            <returns>
            <b>true</b> if the <see cref="P:Vintasoft.Imaging.Resolution.Horizontal" /> and <see cref="P:Vintasoft.Imaging.Resolution.Vertical" />
            values of left and right are equal; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.op_Inequality(Vintasoft.Imaging.Resolution,Vintasoft.Imaging.Resolution)">
            <summary>
            Compares two <see cref="T:Vintasoft.Imaging.Resolution" /> structures. The result specifies whether 
            the values of the <see cref="P:Vintasoft.Imaging.Resolution.Horizontal" /> and <see cref="P:Vintasoft.Imaging.Resolution.Vertical" />
            properties of the two <see cref="T:Vintasoft.Imaging.Resolution" /> structures are unequal.
            </summary>
            <param name="left">A <see cref="T:Vintasoft.Imaging.Resolution" /> to compare.</param>
            <param name="right">A <see cref="T:Vintasoft.Imaging.Resolution" /> to compare.</param>
            <returns>
            <b>true</b> if the values of either the <see cref="P:Vintasoft.Imaging.Resolution.Horizontal" />
            properties or the <see cref="P:Vintasoft.Imaging.Resolution.Vertical" /> properties of left and 
            right differ; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Resolution.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="T:Vintasoft.Imaging.TypeConverters.ResolutionConverter">
            <summary>
            Converts a <see cref="T:Vintasoft.Imaging.Resolution" /> object from one data type to another.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.TypeConverters.ResolutionConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.TypeConverters.ResolutionConverter" /> class.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.TypeConverters.ResolutionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified object to the specified type.
            </summary>
            <param name="context">A formatter context. This object can be used to get additional
            information about the environment this converter is being called from. This may be null,
            so you should always check. Also, properties on the context object may also return null.</param>
            <param name="culture">An object that contains culture specific information, such as
            the language, calendar, and cultural conventions associated with a specific culture. It
            is based on the RFC 1766 standard.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.TypeConverters.ResolutionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines that this converter can convert an object in the given source type
            to the native type of the converter.
            </summary>
            <param name="context">A formatter context. This object can be used to get additional
            information about the environment this converter is being called from. This may be null,
            so you should always check. Also, properties on the context object may also return null.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns><b>true</b> if this object can perform the conversion;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.TypeConverters.ResolutionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified object to a <see cref="T:Vintasoft.Imaging.Resolution" /> object.
            </summary>
            <param name="context">A formatter context. This object can be used to get additional
            information about the environment this converter is being called from. This may be null,
            so you should always check. Also, properties on the context object may also return null.</param>
            <param name="culture">An object that contains culture specific information, such as
            the language, calendar, and cultural conventions associated with a specific culture. It
            is based on the RFC 1766 standard.</param>
            <param name="value">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.BitmapChannelsFormat">
            <summary>
            Specifies the bitmap channels format.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.#ctor(Vintasoft.Imaging.ChannelFormat[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> class.
            </summary>
            <param name="channels">The color channels.</param>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.#ctor(System.Boolean,System.Boolean,Vintasoft.Imaging.ChannelFormat[])">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> class.
            </summary>
            <param name="pixelDataIsLittleEndian">Indicates whether pixel data
            are stored in little endian order.</param>
            <param name="channelDataIsLittleEndian">Indicates whether channel data
            are stored in little endian order.</param>
            <param name="channels">The color channels.</param>
            <exception cref="T:System.NotSupportedException">Thrown if
            <b>pixelDataIsLittleEndian</b> and <b>channelDataIsLittleEndian</b> are both <b>true</b>.
            </exception>
            <exception cref="T:System.ArgumentException">Thrown if
            <b>pixelDataIsLittleEndian</b> is <b>true</b> but pixel data is not byte-padded
            <b>OR</b>
            <b>channelDataIsLittleEndian</b> is <b>true</b> but channel data is not byte-padded.
            </exception>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> class.
            </summary>
            <param name="channelCount">The channel count.</param>
            <param name="bitsPerChannel">The bits per channel.</param>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.#ctor(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> class.
            </summary>
            <param name="channelCount">The channel count.</param>
            <param name="bitsPerChannel">The bits per channel.</param>
            <param name="pixelDataIsLittleEndian">Indicates whether pixel data
            are stored in little endian order.</param>
            <param name="channelDataIsLittleEndian">Indicates whether channel data
            are stored in little endian order.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if
            <i>channelCount</i> is less than 1
            <b>OR</b>
            <i>bitsPerChannel</i> is less than 1.
            </exception>
            <exception cref="T:System.NotSupportedException">Thrown if
            <b>pixelDataIsLittleEndian</b> and <b>channelDataIsLittleEndian</b> are both <b>true</b>.
            </exception>
            <exception cref="T:System.ArgumentException">Thrown if
            <b>pixelDataIsLittleEndian</b> is <b>true</b> but pixel data is not byte-padded
            <b>OR</b>
            <b>channelDataIsLittleEndian</b> is <b>true</b> but channel data is not byte-padded.
            </exception>
        </member>
        <member name="P:Vintasoft.Imaging.BitmapChannelsFormat.Channels">
            <summary>
            Gets the color channels of pixel format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.BitmapChannelsFormat.ChannelCount">
            <summary>
            Gets the channel count.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.BitmapChannelsFormat.BitsPerPixel">
            <summary>
            Gets the bits per pixel.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.BitmapChannelsFormat.ChannelDataIsLittleEndian">
            <summary>
            Gets a value indicating whether channel data are stored in little endian order.
            </summary>
            <value>
            <b>true</b> - channel data are stored in little endian order; otherwise, <b>false</b>.
            Default value is <b>false</b>.
            </value>
            <remarks>
            The values of <see cref="P:Vintasoft.Imaging.BitmapChannelsFormat.ChannelDataIsLittleEndian" />
            and <see cref="P:Vintasoft.Imaging.BitmapChannelsFormat.PixelDataIsLittleEndian" />
            cannot be both <b>true</b>.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.BitmapChannelsFormat.PixelDataIsLittleEndian">
            <summary>
            Gets a value indicating whether pixel data are stored in little endian order.
            </summary>
            <value>
            <b>true</b> - pixel data are stored in little endian order; otherwise, <b>false</b>.
            Default value is <b>false</b>.
            </value>
            <remarks>
            The values of <see cref="P:Vintasoft.Imaging.BitmapChannelsFormat.ChannelDataIsLittleEndian" />
            and <see cref="P:Vintasoft.Imaging.BitmapChannelsFormat.PixelDataIsLittleEndian" />
            cannot be both <b>true</b>.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />
            is equal to the current <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />.
            </summary>
            <param name="obj">
            The <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> to compare with
            the current <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />.
            </param>
            <returns>
            <b>true</b> if the specified <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" /> is
            equal to the current <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />.
            </summary>
            <returns>A hash code for the current <see cref="T:Vintasoft.Imaging.BitmapChannelsFormat" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.BitmapChannelsFormat.FromPixelFormat(Vintasoft.Imaging.PixelFormat)">
            <summary> 
            Converts pixel format to bitmap data format.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>Bitmap data format.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.BitmapLockMode">
            <summary>
            Specifies available modes of bitmap's locking.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.BitmapLockMode.Read">
            <summary>
            Specifies that a part of bitmap is locked for reading.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.BitmapLockMode.Write">
            <summary>
            Specifies that a part of bitmap is locked for writing with exclusive access mode.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.BitmapLockMode.NonExclusiveWrite">
            <summary>
            Specifies that a part of bitmap is locked for writing with non-exclusive access mode.
            </summary>
        </member>
        <member name="F:Vintasoft.Imaging.BitmapLockMode.ReadWrite">
            <summary>
            Specifies that a part of bitmap is locked for reading or writing.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.BitmapSizeLimitException">
            <summary>
            Represents an error that occurs if SDK needs to create bitmap with size more than
            size specified in the <see cref="P:Vintasoft.Imaging.VintasoftBitmap.MaxBitmapSize" /> property.
            </summary>
            <seealso cref="P:Vintasoft.Imaging.VintasoftBitmap.MaxBitmapSize" />
        </member>
        <member name="M:Vintasoft.Imaging.BitmapSizeLimitException.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.BitmapSizeLimitException" /> class.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.ChannelFormat">
            <summary>
            Represents a channel format.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ChannelFormat.#ctor(System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ChannelFormat" /> class.
            </summary>
            <param name="bits">Count of bits in channel.</param>
            <param name="isSignificant">Indicates whether channel contains significant data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.ChannelFormat.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ChannelFormat" /> class.
            </summary>
            <param name="bits">Count of bits in channel.</param>
            <param name="isSignificant">Indicates whether channel contains significant data.</param>
            <param name="isUnsigned">Indicates whether channel contains unsigned data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.ChannelFormat.IsUnsigned">
            <summary>
            Gets a value indicating whether channel contains unsigned data.
            </summary>
            <value>
            <b>true</b> if channel contains unsigned data; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.ChannelFormat.IsSignificant">
            <summary>
            Gets a value indicating whether channel contains significant data.
            </summary>
            <value>
            <b>true</b> if channel contains significant data; otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.ChannelFormat.BitCount">
            <summary>
            Gets count of bits in channel.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.ManagedBitmap">
            <summary>
            Contains information about a raster image in managed memory.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.#ctor(System.Int32,System.Int32,Vintasoft.Imaging.PixelFormat)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="pixelFormat">Image pixel format.</param>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="resolution">Image resolution.</param>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="palette">Image palette.</param>
            <param name="stride">Image data stride.</param>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[],Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image data stride.</param>
            <param name="pixelData">Image pixel data.</param>
            <param name="resolution">Image resolution.</param>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="palette">Image palette.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>pixelData</i> does NOT have enough data for specified bitmap.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[],Vintasoft.Imaging.Resolution,Vintasoft.Imaging.BitmapChannelsFormat,Vintasoft.Imaging.ColorSpaceFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image data stride.</param>
            <param name="pixelData">Image pixel data.</param>
            <param name="resolution">Image resolution.</param>
            <param name="channelsFormat">Image channels format.</param>
            <param name="colorSpaceFormat">The color space format.</param>
            <param name="palette">Image palette.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>pixelData</i> does NOT have enough data for specified bitmap.</exception>
        </member>
        <member name="P:Vintasoft.Imaging.ManagedBitmap.HasPixelData">
            <summary>
            Gets a value indicating whether bitmap has pixel data.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.Clone">
            <summary>
            Creates a new <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> that is a copy of the current
            instance.
            </summary>
            <returns>A new <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> that is a copy of this
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.GetPixelDataAndDispose">
            <summary>
            Returns the pixel data and disposes this bitmap.
            </summary>
            <returns>An array that contains pixel data.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.Create(System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Creates a new instance of <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </summary>
            <param name="width">Width of the bitmap in pixels.</param>
            <param name="height">Height of the bitmap in pixels.</param>
            <param name="resolution">Resolution of the bitmap.</param>
            <param name="pixelFormat">Pixel format of the bitmap.</param>
            <param name="palette">Palette of the bitmap.</param>
            <returns>
            A new instance of <see cref="T:Vintasoft.Imaging.ManagedBitmap" /> class.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Vintasoft.Imaging.VintasoftBitmap" />
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <b>true</b> to release both managed and unmanaged resources; 
            <b>false</b> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.LockPixelData">
            <summary>
            Locks the pixel data.
            </summary>
            <returns>
            The pointer to pixel data.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.ManagedBitmap.UnlockPixelData">
            <summary>
            Unlocks the pixel data.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.UnmanagedBitmap">
            <summary>
            Contains information about a raster image in unmanaged memory.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette,System.IntPtr,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="resolution">Image resolution.</param>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="palette">Image palette.</param>
            <param name="stride">Image data stride.</param>
            <param name="pixelDataPtr">Pointer to an image pixels data.</param>
            <param name="needFreeMemoryAfterUse">Indicates that memory at address <i>pixelDataPtr</i> must be freed when bitmap disposed.</param>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="resolution">Image resolution.</param>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="palette">Image palette.</param>
            <param name="stride">Image data stride.</param>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.#ctor(System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.BitmapChannelsFormat,Vintasoft.Imaging.ColorSpaceFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> class.
            </summary>
            <param name="width">Image width.</param>
            <param name="height">Image height.</param>
            <param name="stride">Image data stride.</param>
            <param name="resolution">Image resolution.</param>
            <param name="channelsFormat">The channels format.</param>
            <param name="colorSpaceFormat">Image color space format.</param>
            <param name="palette">Image palette.</param>
        </member>
        <member name="P:Vintasoft.Imaging.UnmanagedBitmap.HasPixelData">
            <summary>
            Gets a value indicating whether bitmap has pixel data.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.Clone">
            <summary>
            Creates a new <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> that is a copy of the current
            instance.
            </summary>
            <returns>A new <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> that is a copy of this
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.Create(System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Creates a new instance of <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> class.
            </summary>
            <param name="width">Width of the bitmap in pixels.</param>
            <param name="height">Height of the bitmap in pixels.</param>
            <param name="resolution">Resolution of the bitmap.</param>
            <param name="pixelFormat">Pixel format of the bitmap.</param>
            <param name="palette">Palette of the bitmap.</param>
            <returns>
            A new instance of <see cref="T:Vintasoft.Imaging.UnmanagedBitmap" /> class.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Vintasoft.Imaging.VintasoftBitmap" />
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <b>true</b> to release both managed and unmanaged resources; 
            <b>false</b> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.LockPixelData">
            <summary>
            Locks the pixel data.
            </summary>
            <returns>
            The pointer to pixel data.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.UnmanagedBitmap.UnlockPixelData">
            <summary>
            Unlocks the pixel data.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.VintasoftBitmap">
            <summary>
            Contains information about a bitmap.
            </summary>
            <seealso cref="T:Vintasoft.Imaging.UnmanagedBitmap" />
            <seealso cref="T:Vintasoft.Imaging.ManagedBitmap" />
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.#ctor(System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="stride">The stride.</param>
            <param name="resolution">The resolution.</param>
            <param name="pixelFormat">The pixel format.</param>
            <param name="palette">The palette.</param>
            <param name="isNewBitmap">if set to <b>true</b> is new bitmap.</param>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Finalize">
            <summary>
            Allows a <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> to attempt to free resources and
            perform other cleanup operations before the <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> is reclaimed
            by garbage collection.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.MaxBitmapSize">
            <summary>
            Gets or sets the maximum size of the bitmap, in bytes.
            </summary>
            <value>
            Available values:<br />
            0 - size of bitmap is unlimited;<br />
            greater than 0 - maximum size of bitmap that SDK can create.<br />
            Default value is <b>0</b>.
            </value>        
            <remarks>
            SDK will throw an <see cref="T:Vintasoft.Imaging.BitmapSizeLimitException" />
            if <see cref="P:Vintasoft.Imaging.VintasoftBitmap.MaxBitmapSize" /> is greater than 0 and
            SDK need to create bitmap with size greater than <see cref="P:Vintasoft.Imaging.VintasoftBitmap.MaxBitmapSize" />.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.Width">
            <summary> 
            Gets the width, in pixels, of the bitmap.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.Height">
            <summary> 
            Gets the height, in pixels, of the bitmap.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.PixelFormat">
            <summary> 
            Gets the pixel format of the bitmap.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.HasPixelData">
            <summary>
            Gets a value indicating whether bitmap has pixel data.
            </summary>
            <value>
            <b>true</b> - bitmap has memory allocated for pixels;
            <b>false</b> - bitmap does not have memory allocated for pixels.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.IsDisposed">
            <summary>
            Gets a value indicating whether this bitmap is disposed.
            </summary>
            <value>
            <b>true</b> if the bitmap is disposed;
            otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.ChannelsFormat">
            <summary>
            Gets the format of bitmap color channels.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.ColorSpaceFormat">
            <summary>
            Gets the color space format of this image.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.BitsPerPixel">
            <summary>
            Gets the bits per pixel of bitmap.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.Palette">
            <summary>
            Gets the palette.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.Resolution">
            <summary>
            Gets or sets resolution of bitmap.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmap.Stride">
            <summary>
            Gets or sets a stride of the bitmap.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetPixelFormat(System.Int32)">
            <summary>
            Gets the pixel format from bits per pixel of a bitmap.
            </summary>
            <param name="bitsPerPixel">The bits per pixel.</param>
            <returns>The pixel format.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetPixelFormat(Vintasoft.Imaging.ColorSpaceFormat,Vintasoft.Imaging.BitmapChannelsFormat)">
            <summary>
            Returns the pixel format from color space format and bitmap channels format.
            </summary>
            <param name="colorSpaceFormat">The color space format.</param>
            <param name="channelsFormat">The channels format.</param>
            <returns>The pixel format.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetRowWidthInBytes(Vintasoft.Imaging.PixelFormat,System.Int32)">
            <summary>
            Calculates a row width, in bytes.
            </summary>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="width">Row width, in pixels.</param>
            <returns>Image row length, in bytes.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetRowWidthInBytes(System.Int32,System.Int32)">
            <summary>
            Calculates a row width, in bytes.
            </summary>
            <param name="bitsPerPixel">Image pixel format.</param>
            <param name="width">Row width, in pixels.</param>
            <returns>Image row length, in bytes.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetStride(Vintasoft.Imaging.PixelFormat,System.Int32)">
            <summary>
            Calculates an image stride, in bytes.
            </summary>
            <param name="pixelFormat">Image pixel format.</param>
            <param name="width">Image width, in pixels.</param>
            <returns>Image stride for specified image width and pixel format.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.GetBitsPerPixel(Vintasoft.Imaging.PixelFormat)">
            <summary>
            Returns number of bits per pixel for specified pixel format.
            </summary>
            <param name="pixelFormat">Pixel format.</param>
            <returns>Number of bits per pixel for specified pixel format.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Clone">
            <summary>
            Creates a new <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> that is a copy of the current
            instance.
            </summary>
            <returns>A new <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> that is a copy of this
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Lock(Vintasoft.Imaging.BitmapLockMode)">
            <summary>
            Locks the bitmap data.
            </summary>
            <param name="lockMode">The lock mode.</param>
            <returns>A new instance of <see cref="T:Vintasoft.Imaging.VintasoftBitmapData" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Lock(System.Int32,System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.BitmapLockMode)">
            <summary>
            Locks the bitmap data.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="lockMode">The lock mode.</param>
            <returns>A new instance of <see cref="T:Vintasoft.Imaging.VintasoftBitmapData" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Lock(System.Int32,System.Int32,System.Int32,System.Int32,Vintasoft.Imaging.BitmapLockMode,Vintasoft.Imaging.PixelFormat)">
            <summary>
            Locks the bitmap data.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="lockMode">The lock mode.</param>
            <param name="pixelFormat">The pixel format.</param>
            <returns>A new instance of <see cref="T:Vintasoft.Imaging.VintasoftBitmapData" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Unlock(Vintasoft.Imaging.VintasoftBitmapData)">
            <summary>
            Unlocks the specified bitmap data.
            </summary>
            <param name="data">The bitmap data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Dispose">
            <summary>
            Releases all resources used by this <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> object.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Create(System.Int32,System.Int32,Vintasoft.Imaging.Resolution,Vintasoft.Imaging.PixelFormat,Vintasoft.Imaging.Palette)">
            <summary>
            Creates a new instance of <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> class.
            </summary>
            <param name="width">Width of the bitmap in pixels.</param>
            <param name="height">Height of the bitmap in pixels.</param>
            <param name="pixelFormat">Pixel format of the bitmap.</param>
            <param name="palette">Palette of the bitmap.</param>
            <param name="resolution">Resolution of the bitmap.</param>
            <returns>A new instance of <see cref="T:Vintasoft.Imaging.VintasoftBitmap" /> class.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.LockPixelData">
            <summary>
            Locks the pixel data.
            </summary>
            <returns>The pointer to pixel data.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.UnlockPixelData">
            <summary>
            Unlocks the pixel data.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.VintasoftBitmap.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Vintasoft.Imaging.VintasoftBitmap" />
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            <b>true</b> to release both managed and unmanaged resources; 
            <b>false</b> to release only unmanaged resources.
            </param>
        </member>
        <member name="T:Vintasoft.Imaging.VintasoftBitmapData">
            <summary>
            Provides accsess to a bitmap data.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.Scan0">
            <summary>
            Gets the pointer to bitmap data.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.Stride">
            <summary>
            Gets the stride.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.PixelFormat">
            <summary>
            Gets the pixel format.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.RowWidthInBytes">
            <summary>
            Gets the row width, in bytes.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.X">
            <summary>
            Gets the X coordinate of locked rectangle.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.Y">
            <summary>
            Gets the Y coordinate of locked rectangle.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.Width">
            <summary>
            Gets the width of locked rectangle.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.Height">
            <summary>
            Gets the height of locked rectangle.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.VintasoftBitmapData.LockMode">
            <summary>
            Gets the bitmap lock mode.
            </summary>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftColor">
            <summary>
            Represents an ARGB 32-bit color.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftColor.Empty">
            <summary>
            The empty color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.Transparent">
            <summary>
            Gets the transparent color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.Black">
            <summary>
            Gets the black color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.White">
            <summary>
            Gets the white color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.Red">
            <summary>
            Gets the red color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.Green">
            <summary>
            Gets the green color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.Blue">
            <summary>
            Gets the blue color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.R">
            <summary>
             Gets the red component value of this color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.G">
            <summary>
            Gets the green component value of this color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.B">
            <summary>
            Gets the blue component value of this color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.A">
            <summary>
            Gets the alpha component value of this color.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftColor.IsEmpty">
            <summary>
            Specifies whether this color is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a color from its component (alpha, red, green, and blue) values.
            </summary>
            <param name="alpha">The alpha component.</param>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
            <returns>A color with specified components.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.FromArgb(System.Int32)">
            <summary>
            Creates a color structure from a 32-bit ARGB value.
            </summary>
            <param name="argb">A value specifying the 32-bit ARGB value.</param>
            <returns>A color with specified components.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftColor" /> from its component (red, green, and blue) values.
            </summary>
            <param name="red">The red component.</param>
            <param name="green">The green component.</param>
            <param name="blue">The blue component.</param>
            <returns>A color with specified components.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.FromHtml(System.String)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftColor" /> from an HTML color representation.
            </summary>
            <param name="htmlColor">The string representation of the Html color to translate.</param>
            <returns>
            The <see cref="T:Vintasoft.Primitives.VintasoftColor" /> structure that represents the translated HTML color or <see cref="F:Vintasoft.Primitives.VintasoftColor.Empty" /> if <paramref name="htmlColor" /> is <b>null</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.FromArgb(System.Byte,Vintasoft.Primitives.VintasoftColor)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftColor" /> structure from the specified <see cref="T:Vintasoft.Primitives.VintasoftColor" /> structure, but with the new specified alpha value. 
            </summary>
            <param name="alpha">The alpha component.</param>
            <param name="baseColor">The base color.</param>
            <returns>A color with specified components.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.ToArgb">
            <summary>
            Returns the ARGB value of this <see cref="T:Vintasoft.Primitives.VintasoftColor" />.
            </summary>
            <returns>The 23-bit integer ARGB value of this <see cref="T:Vintasoft.Primitives.VintasoftColor" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.ToString">
            <summary>
            Converts this <see cref="T:Vintasoft.Primitives.VintasoftColor" /> to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this <see cref="T:Vintasoft.Primitives.VintasoftColor" />.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.op_Equality(Vintasoft.Primitives.VintasoftColor,Vintasoft.Primitives.VintasoftColor)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftColor.op_Inequality(Vintasoft.Primitives.VintasoftColor,Vintasoft.Primitives.VintasoftColor)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftPoint">
            <summary>
            Represents a point in two-dimensional plane, which is defined by an ordered float double-precision pair of X and Y coordinates.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftPoint.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> class with the specified coordinates.
            </summary>
            <param name="x">X coordinate in a two-dimensional plane.</param>
            <param name="y">Y coordinate in a two-dimensional plane.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPoint.X">
            <summary>
            Gets or sets X coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPoint.Y">
            <summary>
            Gets or sets Y coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPoint.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.op_Equality(Vintasoft.Primitives.VintasoftPoint,Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.op_Inequality(Vintasoft.Primitives.VintasoftPoint,Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.op_Addition(Vintasoft.Primitives.VintasoftPoint,Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Sums points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.op_Subtraction(Vintasoft.Primitives.VintasoftPoint,Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Subtracts points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPoint.op_UnaryNegation(Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Unary negation of a point.
            </summary>
            <param name="point">The point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftPointF">
            <summary>
            Represents a point in two-dimensional plane, which is defined by an ordered float single-precision pair of X and Y coordinates.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftPointF.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> class with the specified coordinates.
            </summary>
            <param name="x">X coordinate in a two-dimensional plane.</param>
            <param name="y">Y coordinate in a two-dimensional plane.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointF.X">
            <summary>
            Gets or sets X coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointF.Y">
            <summary>
            Gets or sets Y coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointF.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_Implicit(Vintasoft.Primitives.VintasoftPointI)~Vintasoft.Primitives.VintasoftPointF">
            <summary>
            Performs an implicit conversion from <see cref="T:Vintasoft.Primitives.VintasoftPointI" /> to <see cref="T:Vintasoft.Primitives.VintasoftPointF" />.
            </summary>
            <param name="point">The point to convert.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_Equality(Vintasoft.Primitives.VintasoftPointF,Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_Inequality(Vintasoft.Primitives.VintasoftPointF,Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_Addition(Vintasoft.Primitives.VintasoftPointF,Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Sums points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_Subtraction(Vintasoft.Primitives.VintasoftPointF,Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Subtracts points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointF.op_UnaryNegation(Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Unary negation of a point.
            </summary>
            <param name="point">The point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftPointI">
            <summary>
            Represents a point in two-dimensional plane, which is defined by an ordered 32-bit signed integer pair of X and Y coordinates.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftPointI.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftPointI" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftPointI" /> class with the specified coordinates.
            </summary>
            <param name="x">X coordinate in a two-dimensional plane.</param>
            <param name="y">Y coordinate in a two-dimensional plane.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointI.X">
            <summary>
            Gets or sets X coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointI.Y">
            <summary>
            Gets or sets Y coordinate of the point.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftPointI.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.Round(Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Converts the specified <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to a <see cref="T:Vintasoft.Primitives.VintasoftPointI" /> structure by rounding the point values to the nearest integer.
            </summary>
            <param name="point">The <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to convert.</param>
            <returns>The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> this method converts to. </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.op_Equality(Vintasoft.Primitives.VintasoftPointI,Vintasoft.Primitives.VintasoftPointI)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.op_Inequality(Vintasoft.Primitives.VintasoftPointI,Vintasoft.Primitives.VintasoftPointI)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.op_Addition(Vintasoft.Primitives.VintasoftPointI,Vintasoft.Primitives.VintasoftPointI)">
            <summary>
            Sums points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.op_Subtraction(Vintasoft.Primitives.VintasoftPointI,Vintasoft.Primitives.VintasoftPointI)">
            <summary>
            Subtracts points.
            </summary>
            <param name="left">Left point.</param>
            <param name="right">Right point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftPointI.op_UnaryNegation(Vintasoft.Primitives.VintasoftPointI)">
            <summary>
            Unary negation of a point.
            </summary>
            <param name="point">The point.</param>
            <returns>Result point.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftRect">
            <summary>
            Stores a set of four double-precision values that represent the location and size of a rectangle.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftRect.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.#ctor(Vintasoft.Primitives.VintasoftPoint,Vintasoft.Primitives.VintasoftSize)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftRect" /> struct.
            </summary>
            <param name="location">Location of the rectangle.</param>
            <param name="size">Size of the rectangle.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftRect" /> struct.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Left">
            <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Right">
            <summary>
            Gets the x-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRect.X" /> and <see cref="P:Vintasoft.Primitives.VintasoftRect.Width" /> of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Top">
            <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Bottom">
            <summary>
            Gets the y-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRect.Y" /> and <see cref="P:Vintasoft.Primitives.VintasoftRect.Height" /> of 
            this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Width">
            <summary>
            Gets or sets the width of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Height">
            <summary>
            Gets or sets the height of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.Size">
            <summary>
            Gets or sets the size of this <see cref="T:Vintasoft.Primitives.VintasoftRect" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRect.IsEmpty">
            <summary>
            Tests whether the <see cref="P:Vintasoft.Primitives.VintasoftRect.Width" /> or <see cref="P:Vintasoft.Primitives.VintasoftRect.Height" /> property 
            of this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> has a value of zero.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Contains(Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Determines if the specified point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <param name="point">The <see cref="T:Vintasoft.Primitives.VintasoftPoint" /> to test.</param>
            <returns><b>True</b> if the <i>point</i> is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Contains(Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Determines if the rectangular region is entirely contained within this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> to test.</param>
            <returns><b>True</b> if <i>rectangle</i> is entirely contained within the rectangular region represented 
            by this <see cref="T:Vintasoft.Primitives.VintasoftRect" />; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Contains(System.Double,System.Double)">
            <summary>
            Determines if the specified point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <param name="x">X-coordinate of the point.</param>
            <param name="y">Y-coordinate of the point.</param>
            <returns><b>True</b> if the point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Equals(System.Object)">
            <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> with the
            same location and size of this <see cref="T:Vintasoft.Primitives.VintasoftRect" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><b>True</b> if <i>obj</i> is a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> and its <see cref="P:Vintasoft.Primitives.VintasoftRect.X" />,
            <see cref="P:Vintasoft.Primitives.VintasoftRect.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRect.Width" />, and <see cref="P:Vintasoft.Primitives.VintasoftRect.Height" /> 
            properties are equal to the corresponding properties of this <see cref="T:Vintasoft.Primitives.VintasoftRect" />; 
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region.</param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region.</param>
            <returns>The new <see cref="T:Vintasoft.Primitives.VintasoftRect" /> that this method creates.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>right</i> is less than <i>left</i> or
            <i>bottom</i> is less than <i>top</i>.</exception>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <returns>The hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRect" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Inflate(Vintasoft.Primitives.VintasoftSize)">
            <summary>
            Inflates this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Inflate(System.Double,System.Double)">
            <summary>
            Inflates this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> by the specified amount.
            </summary>
            <param name="x">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure horizontally.</param>
            <param name="y">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure vertically.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Inflate(Vintasoft.Primitives.VintasoftRect,System.Double,System.Double)">
            <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure. 
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> to be copied. This rectangle is not modified.</param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally.</param>
            <param name="y">The amount to inflate the copy of the rectangle vertically.</param>
            <returns>The inflated <see cref="T:Vintasoft.Primitives.VintasoftRect" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Intersect(Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Replaces this <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure with the intersection of itself and 
            the specified <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <param name="rect">The rectangle to intersect.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Intersect(Vintasoft.Primitives.VintasoftRect,Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that represents the intersection of two rectangles. 
            If there is no intersection an empty <see cref="T:Vintasoft.Primitives.VintasoftRect" /> is returned.
            </summary>
            <param name="firstRectangle">First rectangle to intersect.</param>
            <param name="secondRectangle">Second rectangle to intersect.</param>
            <returns>&gt;A <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure the size of which represents the overlapped area 
            of the two specified rectangles.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.IntersectsWith(Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Determines if this rectangle intersects with the specified <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure.
            </summary>
            <param name="rect">The rectangle to test.</param>
            <returns><b>True</b> if there is any intersection; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Offset(Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="offset">Amount to offset the location.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Offset(System.Double,System.Double)">
            <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The horizontal offset.</param>
            <param name="y">The vertical offset.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.Union(Vintasoft.Primitives.VintasoftRect,Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <param name="firstRectangle">First rectangle to union.</param>
            <param name="secondRectangle">Second rectangle to union.</param>
            <returns>A <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that contains both of the two rectangles that form the union.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.GetBoundingRect">
            <summary>
            Returns the smallest integer rectangle that contains this rectangle.
            </summary>
            <returns><see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that contains this rectangle.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.op_Inequality(Vintasoft.Primitives.VintasoftRect,Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structures differ in location or size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that is to the left of the inequality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that is to the right of the inequality operator.</param>
            <returns><b>True</b> if any of the <see cref="P:Vintasoft.Primitives.VintasoftRect.X" /> , <see cref="P:Vintasoft.Primitives.VintasoftRect.Y" />, 
            <see cref="P:Vintasoft.Primitives.VintasoftRect.Width" />, or <see cref="P:Vintasoft.Primitives.VintasoftRect.Height" /> properties of 
            the two <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structures are unequal; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.op_Equality(Vintasoft.Primitives.VintasoftRect,Vintasoft.Primitives.VintasoftRect)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structures have equal location and size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that is to the left of the equality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structure that is to the right of the equality operator.</param>
            <returns><b>True</b> if the two specified <see cref="T:Vintasoft.Primitives.VintasoftRect" /> structures have equal 
            <see cref="P:Vintasoft.Primitives.VintasoftRect.X" />, <see cref="P:Vintasoft.Primitives.VintasoftRect.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRect.Width" />, 
            and <see cref="P:Vintasoft.Primitives.VintasoftRect.Height" /> properties.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRect.op_Implicit(Vintasoft.Primitives.VintasoftRectI)~Vintasoft.Primitives.VintasoftRect">
            <summary>
            Performs an implicit conversion from <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> to <see cref="T:Vintasoft.Primitives.VintasoftRect" />.
            </summary>
            <param name="rect">The rectangle to convert.</param>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftRectF">
            <summary>
            Stores a set of four float single-precision values that represent the location and size of a rectangle.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftRectF.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.#ctor(Vintasoft.Primitives.VintasoftPointF,Vintasoft.Primitives.VintasoftSizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> struct.
            </summary>
            <param name="location">Location of the rectangle.</param>
            <param name="size">Size of the rectangle.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> struct.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Left">
            <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Right">
            <summary>
            Gets the x-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRectF.X" /> and <see cref="P:Vintasoft.Primitives.VintasoftRectF.Width" /> of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Top">
            <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Bottom">
            <summary>
            Gets the y-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRectF.Y" /> and <see cref="P:Vintasoft.Primitives.VintasoftRectF.Height" /> of 
            this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Width">
            <summary>
            Gets or sets the width of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Height">
            <summary>
            Gets or sets the height of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.Size">
            <summary>
            Gets or sets the size of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectF.IsEmpty">
            <summary>
            Tests whether the <see cref="P:Vintasoft.Primitives.VintasoftRectF.Width" /> or <see cref="P:Vintasoft.Primitives.VintasoftRectF.Height" /> property 
            of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> has a value of zero.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Contains(Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Determines if the specified point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <param name="point">The <see cref="T:Vintasoft.Primitives.VintasoftPointF" /> to test.</param>
            <returns><b>True</b> if the <i>point</i> is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Contains(Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Determines if the rectangular region is entirely contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> to test.</param>
            <returns><b>True</b> if <i>rectangle</i> is entirely contained within the rectangular region represented 
            by this <see cref="T:Vintasoft.Primitives.VintasoftRectF" />; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Contains(System.Single,System.Single)">
            <summary>
            Determines if the specified point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <param name="x">X-coordinate of the point.</param>
            <param name="y">Y-coordinate of the point.</param>
            <returns><b>True</b> if the point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Equals(System.Object)">
            <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> with the 
            same location and size of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><b>True</b> if <i>obj</i> is a <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> and its <see cref="P:Vintasoft.Primitives.VintasoftRectF.X" />, 
            <see cref="P:Vintasoft.Primitives.VintasoftRectF.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRectF.Width" />, and <see cref="P:Vintasoft.Primitives.VintasoftRectF.Height" /> 
            properties are equal to the corresponding properties of this <see cref="T:Vintasoft.Primitives.VintasoftRectF" />; 
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.FromLTRB(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region.</param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region.</param>
            <returns>The new <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> that this method creates.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>right</i> is less than <i>left</i> or
            <i>bottom</i> is less than <i>top</i>.</exception>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <returns>The hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRectF" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Inflate(Vintasoft.Primitives.VintasoftSizeF)">
            <summary>
            Inflates this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Inflate(System.Single,System.Single)">
            <summary>
            Inflates this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> by the specified amount.
            </summary>
            <param name="x">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure horizontally.</param>
            <param name="y">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure vertically.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Inflate(Vintasoft.Primitives.VintasoftRectF,System.Single,System.Single)">
            <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure. 
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> to be copied. This rectangle is not modified.</param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally.</param>
            <param name="y">The amount to inflate the copy of the rectangle vertically.</param>
            <returns>The inflated <see cref="T:Vintasoft.Primitives.VintasoftRectF" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Intersect(Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Replaces this <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure with the intersection of itself and 
            the specified <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <param name="rect">The rectangle to intersect.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Intersect(Vintasoft.Primitives.VintasoftRectF,Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that represents the intersection of two rectangles. 
            If there is no intersection an empty <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> is returned.
            </summary>
            <param name="firstRectangle">First rectangle to intersect.</param>
            <param name="secondRectangle">Second rectangle to intersect.</param>
            <returns>&gt;A <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure the size of which represents the overlapped area 
            of the two specified rectangles.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.IntersectsWith(Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Determines if this rectangle intersects with the specified <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure.
            </summary>
            <param name="rect">The rectangle to test.</param>
            <returns><b>True</b> if there is any intersection; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Offset(Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="offset">Amount to offset the location.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Offset(System.Single,System.Single)">
            <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The horizontal offset.</param>
            <param name="y">The vertical offset.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.Union(Vintasoft.Primitives.VintasoftRectF,Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <param name="firstRectangle">First rectangle to union.</param>
            <param name="secondRectangle">Second rectangle to union.</param>
            <returns>A <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that contains both of the two rectangles that form the union.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.GetBoundingRect">
            <summary>
            Returns the smallest integer rectangle that contains this rectangle.
            </summary>
            <returns><see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that contains this rectangle.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.op_Inequality(Vintasoft.Primitives.VintasoftRectF,Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structures differ in location or size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that is to the left of the inequality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that is to the right of the inequality operator.</param>
            <returns><b>True</b> if any of the <see cref="P:Vintasoft.Primitives.VintasoftRectF.X" /> , <see cref="P:Vintasoft.Primitives.VintasoftRectF.Y" />, 
            <see cref="P:Vintasoft.Primitives.VintasoftRectF.Width" />, or <see cref="P:Vintasoft.Primitives.VintasoftRectF.Height" /> properties of 
            the two <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structures are unequal; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.op_Equality(Vintasoft.Primitives.VintasoftRectF,Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structures have equal location and size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that is to the left of the equality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structure that is to the right of the equality operator.</param>
            <returns><b>True</b> if the two specified <see cref="T:Vintasoft.Primitives.VintasoftRectF" /> structures have equal 
            <see cref="P:Vintasoft.Primitives.VintasoftRectF.X" />, <see cref="P:Vintasoft.Primitives.VintasoftRectF.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRectF.Width" />, 
            and <see cref="P:Vintasoft.Primitives.VintasoftRectF.Height" /> properties.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectF.op_Implicit(Vintasoft.Primitives.VintasoftRectI)~Vintasoft.Primitives.VintasoftRectF">
            <summary>
            Performs an implicit conversion from <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> to <see cref="T:Vintasoft.Primitives.VintasoftRectF" />.
            </summary>
            <param name="rect">The rectangle to convert.</param>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftRectI">
            <summary>
            Stores a set of four 32-bit signed integer values that represent the location and size of a rectangle. 
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftRectI.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>        
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> struct.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Left">
            <summary>
            Gets the x-coordinate of the left edge of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Right">
            <summary>
            Gets the x-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRectI.X" /> and <see cref="P:Vintasoft.Primitives.VintasoftRectI.Width" /> of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Top">
            <summary>
            Gets the y-coordinate of the top edge of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Bottom">
            <summary>
            Gets the y-coordinate that is the sum of <see cref="P:Vintasoft.Primitives.VintasoftRectI.Y" /> and <see cref="P:Vintasoft.Primitives.VintasoftRectI.Height" /> of 
            this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Width">
            <summary>
            Gets or sets the width of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.Height">
            <summary>
            Gets or sets the height of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftRectI.IsEmpty">
            <summary>
            Tests whether the <see cref="P:Vintasoft.Primitives.VintasoftRectI.Width" /> or <see cref="P:Vintasoft.Primitives.VintasoftRectI.Height" /> property 
            of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> has a value of zero.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Contains(Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Determines if the rectangular region is entirely contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> to test.</param>
            <returns><b>True</b> if <i>rectangle</i> is entirely contained within the rectangular region represented 
            by this <see cref="T:Vintasoft.Primitives.VintasoftRectI" />; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Contains(System.Int32,System.Int32)">
            <summary>
            Determines if the specified point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
            <param name="x">X-coordinate of the point.</param>
            <param name="y">Y-coordinate of the point.</param>
            <returns><b>True</b> if the point is contained within this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Equals(System.Object)">
            <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> with the 
            same location and size of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" />.
            </summary>
            <param name="obj">The object to test.</param>
            <returns><b>True</b> if <i>obj</i> is a <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> and its <see cref="P:Vintasoft.Primitives.VintasoftRectI.X" />, 
            <see cref="P:Vintasoft.Primitives.VintasoftRectI.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRectI.Width" />, and <see cref="P:Vintasoft.Primitives.VintasoftRectI.Height" /> 
            properties are equal to the corresponding properties of this <see cref="T:Vintasoft.Primitives.VintasoftRectI" />; 
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region.</param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region.</param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region.</param>
            <returns>The new <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> that this method creates.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>right</i> is less than <i>left</i> or
            <i>bottom</i> is less than <i>top</i>.</exception>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
            <returns>The hash code for this <see cref="T:Vintasoft.Primitives.VintasoftRectI" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Inflate(System.Int32,System.Int32)">
            <summary>
            Inflates this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> by the specified amount.
            </summary>
            <param name="x">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure horizontally.</param>
            <param name="y">The amount to inflate this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure vertically.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Inflate(Vintasoft.Primitives.VintasoftRectI,System.Int32,System.Int32)">
            <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure. 
            </summary>
            <param name="rectangle">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> to be copied. This rectangle is not modified.</param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally.</param>
            <param name="y">The amount to inflate the copy of the rectangle vertically.</param>
            <returns>The inflated <see cref="T:Vintasoft.Primitives.VintasoftRectI" />.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Intersect(Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Replaces this <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure with the intersection of itself and 
            the specified <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
            <param name="rect">The rectangle to intersect.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Intersect(Vintasoft.Primitives.VintasoftRectI,Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Creates a <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that represents the intersection of two rectangles. 
            If there is no intersection an empty <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> is returned.
            </summary>
            <param name="firstRectangle">First rectangle to intersect.</param>
            <param name="secondRectangle">Second rectangle to intersect.</param>
            <returns>&gt;A <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure the size of which represents the overlapped area 
            of the two specified rectangles.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.IntersectsWith(Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Determines if this rectangle intersects with the specified <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure.
            </summary>
            <param name="rect">The rectangle to test.</param>
            <returns><b>True</b> if there is any intersection; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Offset(System.Int32,System.Int32)">
            <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The horizontal offset.</param>
            <param name="y">The vertical offset.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Union(Vintasoft.Primitives.VintasoftRectI,Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <param name="firstRectangle">First rectangle to union.</param>
            <param name="secondRectangle">Second rectangle to union.</param>
            <returns>A <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that contains both of the two rectangles that form the union.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.Round(Vintasoft.Primitives.VintasoftRectF)">
            <summary>
            Converts a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> to a <see cref="T:Vintasoft.Primitives.VintasoftRect" /> by performing a round operation on 
            all the coordinates.
            </summary>
            <param name="value">The rectangle to convert.</param>
            <returns>Converted rectangle.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.op_Inequality(Vintasoft.Primitives.VintasoftRectI,Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structures differ in location or size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that is to the left of the inequality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that is to the right of the inequality operator.</param>
            <returns><b>True</b> if any of the <see cref="P:Vintasoft.Primitives.VintasoftRectI.X" /> , <see cref="P:Vintasoft.Primitives.VintasoftRectI.Y" />, 
            <see cref="P:Vintasoft.Primitives.VintasoftRectI.Width" />, or <see cref="P:Vintasoft.Primitives.VintasoftRectI.Height" /> properties of 
            the two <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structures are unequal; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftRectI.op_Equality(Vintasoft.Primitives.VintasoftRectI,Vintasoft.Primitives.VintasoftRectI)">
            <summary>
            Tests whether two <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structures have equal location and size.
            </summary>
            <param name="left">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that is to the left of the equality operator.</param>
            <param name="right">The <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structure that is to the right of the equality operator.</param>
            <returns><b>True</b> if the two specified <see cref="T:Vintasoft.Primitives.VintasoftRectI" /> structures have equal 
            <see cref="P:Vintasoft.Primitives.VintasoftRectI.X" />, <see cref="P:Vintasoft.Primitives.VintasoftRectI.Y" />, <see cref="P:Vintasoft.Primitives.VintasoftRectI.Width" />, 
            and <see cref="P:Vintasoft.Primitives.VintasoftRectI.Height" /> properties.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftSize">
            <summary>
            Stores an ordered pair of double-precision values, which specify height and width.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftSize.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftSize" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.#ctor(Vintasoft.Primitives.VintasoftPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftSize" /> struct.
            </summary>
            <param name="point">The point. X coordinate specifies width, Y coordinate specifies height.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftSize" /> struct.
            </summary>
            <param name="width">Width of the size.</param>
            <param name="height">Height of the size.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSize.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSize.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSize.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.op_Equality(Vintasoft.Primitives.VintasoftSize,Vintasoft.Primitives.VintasoftSize)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSize" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSize" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSize" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSize" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSize.op_Inequality(Vintasoft.Primitives.VintasoftSize,Vintasoft.Primitives.VintasoftSize)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSize" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSize" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSize" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSize" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftSizeF">
            <summary>
            Stores an ordered pair of float single-precision values, which specify height and width.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftSizeF.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.#ctor(Vintasoft.Primitives.VintasoftPointF)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> struct.
            </summary>
            <param name="point">The point. X coordinate specifies width, Y coordinate specifies height.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> struct.
            </summary>
            <param name="width">Width of the size.</param>
            <param name="height">Height of the size.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeF.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeF.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeF.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.op_Implicit(Vintasoft.Primitives.VintasoftSizeI)~Vintasoft.Primitives.VintasoftSizeF">
            <summary>
            Performs an implicit conversion from <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> to <see cref="T:Vintasoft.Primitives.VintasoftSizeF" />.
            </summary>
            <param name="size">The size to convert.</param>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.op_Equality(Vintasoft.Primitives.VintasoftSizeF,Vintasoft.Primitives.VintasoftSizeF)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeF.op_Inequality(Vintasoft.Primitives.VintasoftSizeF,Vintasoft.Primitives.VintasoftSizeF)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSizeF" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Vintasoft.Primitives.VintasoftSizeI">
            <summary>
            Stores an ordered pair of 32-bit signed integer values, which specify height and width.
            </summary>
        </member>
        <member name="F:Vintasoft.Primitives.VintasoftSizeI.Empty">
            <summary>
            Gets an uninitialized <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> structure.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> struct.
            </summary>
            <param name="width">Width of the size.</param>
            <param name="height">Height of the size.</param>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeI.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeI.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Vintasoft.Primitives.VintasoftSizeI.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
            <b>True</b> if the specified <see cref="T:System.Object" /> is equal to this instance;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in
            hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of this object.
            </summary>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.op_Equality(Vintasoft.Primitives.VintasoftSizeI,Vintasoft.Primitives.VintasoftSizeI)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> objects are equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> objects are equal; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Primitives.VintasoftSizeI.op_Inequality(Vintasoft.Primitives.VintasoftSizeI,Vintasoft.Primitives.VintasoftSizeI)">
            <summary>
            Tests whether two specified <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> objects are not equivalent.
            </summary>
            <param name="p1">A <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> to test.</param>
            <param name="p2">A <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> to test.</param>
            <returns><b>True</b> if the two <see cref="T:Vintasoft.Primitives.VintasoftSizeI" /> objects are different; otherwise, <b>false</b>.</returns>
        </member>
    </members>
</doc>
